name: Build - Windows - Client - Dev

on:
  workflow_dispatch:
    inputs:
      buildAll:
        type: boolean
        description: 'Build all BEAMPROJS.'
        required: true
        default: false      
  push:
    branches:
      - dev    
  workflow_call:    
    inputs:
      buildAll:
        type: string
        description: 'Build all BEAMPROJS.'
        required: true
        default: false

permissions:
  contents: write

jobs:
  unifyInputs:
    runs-on: [self-hosted, Windows]
    outputs:
      buildAll: ${{ steps.unifyBuildAll.outputs.buildAll }}
    steps:
      - name: Set environment variables
        id: unifyBuildAll
        run: echo "buildAll=${{ inputs.buildAll || 'false' }}" >> $GITHUB_OUTPUT
        
  changes:
    needs: unifyInputs
    runs-on: [self-hosted, Windows]
    
    # This job only runs if we are looking for changes    
    if: ${{ !needs.unifyInputs.buildAll }}
    
    # Expose the list of changed "BEAMPROJ_XXXXX" that were found (this maps to the filter names)
    outputs:            
      BEAMPROJS: ${{ steps.filter.outputs.changes }}
      
    # Clone the repo and find the changed "BEAMPROJ_XXXXX"
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          # The filters here are BEAMPROJ-specific. 
          # We should only rebuild artifacts for a specific BEAMPROJ if there are changes to files it considers relevant. 
          filters: |
            BEAMPROJ_HathoraDemo:            
              - 'Plugins/BEAMPROJ_HathoraDemo/**'
              - 'Plugins/BeamableCore/**'
              - 'Plugins/OnlineSubsystemBeamable/**'
              - 'DockerfileWindows'
              - '**.sh'
              - '**.ps1'              
              - 'Source/**'
              - '*.uproject'            
            BEAMPROJ_SteamDemo:            
              - 'Plugins/BEAMPROJ_SteamDemo/**'
              - 'Plugins/BeamableCore/**'
              - 'DockerfileWindows'
              - '**.sh'
              - '**.ps1'
              - 'Source/**'
              - '*.uproject'
            BEAMPROJ_LiveOpsDemo:            
              - 'Plugins/BEAMPROJ_LiveOpsDemo/**'
              - 'Plugins/BeamableCore/**'
              - 'DockerfileWindows'
              - '**.sh'
              - '**.ps1'
              - 'Source/**'
              - '*.uproject'
            BEAMPROJ_DiscordDemo:            
              - 'Plugins/BEAMPROJ_DiscordDemo/**'
              - 'Plugins/BeamableCore/**'
              - 'DockerfileWindows'
              - '**.sh'
              - '**.ps1'
              - 'Source/**'
              - '*.uproject'
            
  build:
    needs: [unifyInputs, changes]
    uses: ./.github/workflows/build_windows.yml
    
    # Only run this if the changes job actually detected changes OR if we are building all.
    # Empty array will be serialized as [] so you can simply check it in the if condition.    
    # The boolean variable is passed in as a string when in workflow_dispatch (even if you set it as a bool)
    # So... in order for this to work in all cases, we need have workflow_call's buildAll as string to match the behavior of workflow_dispatch bool type. 
    if: |
      (needs.changes.outputs.BEAMPROJS != '[]') || 
      ((needs.changes.result == 'success' || needs.changes.result == 'skipped') && fromJSON(needs.unifyInputs.buildAll))
    
    strategy:
      max-parallel: 2
      matrix:
        # Result of changes job as well as vars are plain strings. That's why you have to use fromJson() to parse it into array.
        # The list of BeamProj is defined by "wherever we detected changes" when inputs.buildAll is false
        # The list of BeamProj is Repository Variable (declared in Github's UnrealSDK's Settings -> Secrets & Variables -> Variables).         
        beamProj: ${{ !needs.unifyInputs.buildAll && fromJSON(needs.changes.outputs.BEAMPROJS) || fromJSON(vars.ALL_BEAMPROJS) }}
    with:
      beamProj: ${{ matrix.beamProj }}
      buildType: client