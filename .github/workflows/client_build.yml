name: Client build

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - main
      - testBuild

permissions:
  contents: write

jobs:
  deploy:
    runs-on: unreal-builder
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_ACTOR }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Pull base image
        run: docker pull ghcr.io/epicgames/unreal-engine:dev-5.3.2
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: . 
          file: Dockerfile  
          push: false  # Set to `true` if you want to push to a registry
          tags: beamable-unreal-client:latest  
      - name: Run the docker image
        run: docker run --name unreal_container -d beamable-unreal-client:latest
      - name: Copy artifacts from the docker image
        run: docker cp unreal_container:/home/ue4/PackagedProject .
      - name: Compress Directory
        run: zip -r artifacts.zip PackagedProject
      - name: Upload Compressed Folder as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: artifacts.zip
      - name: Cleanup
        if: always()  # This ensures the cleanup step runs even if the build fails
        run: |
          docker stop unreal_container
          docker rm unreal_container
          echo "Cleanup done!"